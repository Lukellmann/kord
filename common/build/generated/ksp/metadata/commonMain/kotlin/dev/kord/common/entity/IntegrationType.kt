// THIS FILE IS AUTO-GENERATED BY KordEnumProcessor.kt, DO NOT EDIT!
@file:Suppress(names = arrayOf("RedundantVisibilityModifier", "IncorrectFormatting",
                "ReplaceArrayOfWithLiteral", "SpellCheckingInspection", "GrazieInspection"))

package dev.kord.common.entity

import kotlin.Any
import kotlin.Boolean
import kotlin.Int
import kotlin.LazyThreadSafetyMode.PUBLICATION
import kotlin.String
import kotlin.Suppress
import kotlin.collections.List
import kotlinx.serialization.KSerializer
import kotlinx.serialization.Serializable
import kotlinx.serialization.descriptors.PrimitiveKind
import kotlinx.serialization.descriptors.PrimitiveSerialDescriptor
import kotlinx.serialization.descriptors.SerialDescriptor
import kotlinx.serialization.encoding.Decoder
import kotlinx.serialization.encoding.Encoder

/**
 * See [IntegrationType]s in the
 * [Discord Developer Documentation](https://discord.com/developers/docs/resources/guild#integration-object-integration-structure).
 */
@Serializable(with = IntegrationType.Serializer::class)
public sealed class IntegrationType(
    /**
     * The raw value used by Discord.
     */
    public val `value`: String,
) {
    public final override fun equals(other: Any?): Boolean = this === other ||
            (other is IntegrationType && this.value == other.value)

    public final override fun hashCode(): Int = value.hashCode()

    public final override fun toString(): String =
            "IntegrationType.${this::class.simpleName}(value=$value)"

    /**
     * An unknown [IntegrationType].
     *
     * This is used as a fallback for [IntegrationType]s that haven't been added to Kord yet.
     */
    public class Unknown(
        `value`: String,
    ) : IntegrationType(value)

    public object Twitch : IntegrationType("twitch")

    public object YouTube : IntegrationType("youtube")

    public object Discord : IntegrationType("discord")

    public object GuildSubscription : IntegrationType("guild_subscription")

    internal object Serializer : KSerializer<IntegrationType> {
        public override val descriptor: SerialDescriptor =
                PrimitiveSerialDescriptor("dev.kord.common.entity.IntegrationType",
                PrimitiveKind.STRING)

        public override fun serialize(encoder: Encoder, `value`: IntegrationType) =
                encoder.encodeString(value.value)

        public override fun deserialize(decoder: Decoder) =
                when (val value = decoder.decodeString()) {
            "twitch" -> Twitch
            "youtube" -> YouTube
            "discord" -> Discord
            "guild_subscription" -> GuildSubscription
            else -> Unknown(value)
        }
    }

    public companion object {
        /**
         * A [List] of all known [IntegrationType]s.
         */
        public val entries: List<IntegrationType> by lazy(mode = PUBLICATION) {
            listOf(
                Twitch,
                YouTube,
                Discord,
                GuildSubscription,
            )
        }

    }
}
